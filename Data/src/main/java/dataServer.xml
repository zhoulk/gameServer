<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-lazy-init="false" default-autowire="byName">

    <!--属性占位文件引入，可以通过${属性名}获得属性文件中的内容 -->
    <!--<context:property-placeholder location="file:/Users/zlk/Desktop/GameServer/Hall/src/main/java/db.properties" />-->

    <util:properties id="config" location="file:/Users/zlk/Desktop/GameServer/Data/src/main/java/config.properties"/>

    <!--定义一个jdbc数据源，创建一个驱动管理数据源的bean -->
    <bean id="jdbcDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/mj?characterEncoding=UTF-8" />
        <property name="user" value="root" />
        <property name="password" value="123456789" />
        <property name="acquireIncrement" value="5"></property>
        <property name="initialPoolSize" value="10"></property>
        <property name="minPoolSize" value="5"></property>
        <property name="maxPoolSize" value="20"></property>
    </bean>

    <!--定义一个jdbc数据源，创建一个驱动管理数据源的bean -->
    <!--<bean id="jdbcDataSourceBak"-->
          <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="driverClassName" value="${jdbc.driver}" />-->
        <!--<property name="url" value="${jdbc.url}" />-->
        <!--<property name="username" value="${jdbc.uid}" />-->
        <!--<property name="password" value="${jdbc.pwd}" />-->
    <!--</bean>-->

    <!--创建一个sql会话工厂bean，指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定数据源 -->
        <property name="dataSource" ref="jdbcDataSource" />
        <!--类型别名包，默认引入com.zhangguo.Spring61.entities下的所有类 -->
        <property name="typeAliasesPackage" value="zhoulk.data.server.entities"></property>
        <!--指定sql映射xml文件的路径 -->
        <property name="mapperLocations"
                  value="classpath:zhoulk/data/server/mapping/*Mapper.xml"></property>
    </bean>

    <!--自动扫描映射接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定sql会话工厂，在上面配置过的 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 指定基础包，即自动扫描com.zhangguo.Spring61.mapping这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="zhoulk.data.server.mapping"></property>
    </bean>

    <!-- 创建一个sqlSession对象 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!--自动扫描组件 -->
    <context:component-scan base-package="zhoulk.data.server">
    </context:component-scan>

    <context:annotation-config/>
    <context:component-scan base-package="zhoulk" />

    <bean id="DataServer" class="zhoulk.data.server.DataServer" init-method="start">
        <property name="dataServerIntializer" ref = "DataServerIntializer"/>
    </bean>

    <bean id="DataServerIntializer" class="zhoulk.data.server.DataServerIntializer">
        <property name="parseCmdServerHandler" ref="DataDecodeServerHandler"/>
    </bean>

    <bean id="DataDecodeServerHandler" class="zhoulk.data.server.handler.ParseCmdServerHandler" scope="prototype">
        <property name="mjUserDao" ref="MJUserDao"/>
    </bean>

    <!--<bean id="MJUserDao"/>-->

</beans>
